//@autor:Geek
public class BFord {

	static void BellmanFord(int graph[][], int V, int E, int src)
	{
	int []dis = new int[V];
	for (int i = 0; i < V; i++)
	    dis[i] = Integer.MAX_VALUE;
	dis[src] = 0;
	for (int i = 0; i < V - 1; i++)
	{
	
	    for (int j = 0; j < E; j++)
	    {
	        if (dis[graph[j][0]] != Integer.MAX_VALUE && dis[graph[j][0]] + graph[j][2] <
	                        dis[graph[j][1]])
	            dis[graph[j][1]] =
	            dis[graph[j][0]] + graph[j][2];
	    }
	}
	for (int i = 0; i < E; i++)
	{
	    int x = graph[i][0];
	    int y = graph[i][1];
	    int weight = graph[i][2];
	    if (dis[x] != Integer.MAX_VALUE &&
	            dis[x] + weight < dis[y])
	        System.out.println("Grafo con constantes negativas"
	                +" forman un ciclo");
	}
	
	System.out.println("Distancia minima entre los vertices");
	for (int i = 0; i < V; i++)
	    System.out.println(i + "\t\t" + dis[i]);
	}


	
	public static void main(String[] args) {
			//int V=21, E=56; 
			int MarianoMelgar[][] = { 
						/*	A*/		  { 0, 5, 644}, { 0, 11, 195},{ 0, 12, 449},
						/*  B*/		  { 1, 2, 474 }, { 1, 13, 379 },{ 1, 10, 576},
						/*  C*/		  { 2, 1, 474 }, { 2, 3, 489 },
						/*	D*/		  { 3, 2, 489 }, { 3, 15, 295 },{ 3, 19, 1110 },
						/*	E*/		  { 4, 17, 546}, { 4, 16, 424},
						/*	F*/		  { 5, 10,293}, { 5, 8, 251}, { 5, 0, 644},
						/*	G*/		  { 6, 18, 222}, { 6, 17, 834},
						/*	H*/		  { 7, 20, 411}, { 7, 19, 577},
						/*	I*/		  { 8, 9, 517}, { 8, 5, 251},
						/*	J*/		  { 9, 8, 517}, { 9, 11, 626},
						/*	K*/		  {10, 5,293}, { 10, 1, 576},
						/*	L*/		  {11, 16, 1210}, { 11, 0, 195},{ 11, 9, 626},
						/*	M*/		  {12, 0, 449}, { 12, 13, 284},
						/*	N*/		  {13, 12,284 }, { 13, 1, 379},{ 13, 16, 1070},
						/*	O*/		  {14, 17, 882}, { 14, 15, 512},{ 14, 16, 706},
						/*	P*/		  {15, 14, 512 }, { 15, 3, 295},
						/*	Q*/		  {16, 18, 447 }, { 16, 4, 424},{ 16, 14,706 },{ 16, 13, 1070 },{ 16, 11, 1210},
						/*	R*/		  {17, 19, 626}, { 17, 6, 834},{ 17, 4, 546},{ 17, 14, 882},
						/*	S*/		  {18, 20, 744}, { 18, 16, 447},{ 18, 6, 222},
						/*	T*/		  {19, 7,577 }, { 19, 17, 626},{ 19, 3, 1110},
						/*	U*/		  {20, 7, 411}, { 20, 18, 744},
									};
			int V=16,E=42;
			int Socabaya[][] = { 
							  { 0, 6, 2890}, { 0, 5, 779},
							  { 1, 15, 3610 }, { 1, 9, 1260 },{ 1, 7, 1490},
							  { 2, 7, 121 }, { 2, 6, 1500 },
							  { 3, 12, 960 }, { 3, 10, 558 },
							  { 4, 12, 812}, { 4, 13, 218}, { 4, 9, 1090},
							  { 5, 0, 779}, { 5, 15, 4030},
							  { 6, 2, 1500}, { 6, 0, 2890}, { 6, 11, 2740},
							  { 7, 8, 313}, { 7, 2, 121}, { 7, 1, 1490},
							  { 8, 7, 313}, { 8, 10, 1570},
							  { 9, 4, 1090}, { 9, 10, 2010},{ 9, 1, 1260},
							  {10, 3, 558}, { 10, 11, 337}, { 10, 9, 2010},{ 10, 8, 1570},
							  {11, 10, 337}, { 11, 6, 2740},
							  {12, 3, 960}, { 12, 4, 812}, { 12, 14, 906},
							  {13, 4, 218}, { 13, 14, 586},
							  {14, 12, 906}, { 14, 13, 586},{ 14, 15, 1080},
							  {15, 14, 1080 }, { 15, 1, 3610}, { 15, 5, 4030},
							};
			//int V=10 ,E=29;
			int Characato[][] = { 
							  { 0, 5, 1090}, { 0, 9, 535},
							  { 1, 5, 151}, { 1, 7, 850 },{ 1, 3, 762},
							  { 2, 9, 590 }, { 2, 4, 1760 },{ 2, 6, 2510},
							  { 3, 1, 762 }, { 3, 9, 980},{ 3, 6, 791},{ 3, 4, 923},
							  { 4, 2, 1760}, { 4, 3, 923}, { 4, 6, 194},
							  { 5, 1, 151}, { 5, 0, 1090},{ 5, 7, 814},{ 5, 8, 809},
							  { 6, 2, 2510}, { 6, 4, 194},
							  { 7, 1, 850}, { 7, 5, 814}, { 7, 8, 282},
							  { 8, 5, 809}, { 8, 7, 282},
							  { 9, 0, 535}, { 9, 2, 590},{ 9, 3, 980},
								};
			BellmanFord(Socabaya, V, E, 15);
}
